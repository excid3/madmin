.alert {
  border-radius: 0.25rem;
  font-weight: 500;
  padding: 1rem;
  margin-bottom: 1rem;

  ul {
    margin-top: 0.5rem;
    margin-bottom: 0;
    padding-left: 2rem;
  }

  &.alert-danger {
    background-color: rgb(254 226 226);
    color: rgb(153 27 27);
  }
}

.form-hint {
  font-size: 0.875rem;
  margin-top: 0.5rem;

  &.error {
    color: rgb(239 68 68);
  }
}

.form-group {
  margin-bottom: 1rem;
}

.form-input {
  width: 100%;
}

.form-description {
  color: var(--light-text-color);
}

label {
  color: var(--text-color);
  line-height: 1.5rem;
  font-weight: 500;
  font-size: 0.875rem;
}

button, input, optgroup, select, textarea {
  font-family: inherit;
  font-feature-settings: inherit;
  font-variation-settings: inherit;
  font-size: 100%;
  font-weight: inherit;
  line-height: inherit;
  letter-spacing: inherit;
  color: inherit;
  margin: 0;
  padding: 0;
}

[type='text'], input:where(:not([type])), [type='email'], [type='url'], [type='password'], [type='number'], [type='date'], [type='datetime-local'], [type='month'], [type='search'], [type='tel'], [type='time'], [type='week'], [multiple], textarea, select {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background-color: var(--background-color);

  border-radius: 0.375rem;
  box-shadow: inset 0 0 0 1px rgb(156 163 175);
  line-height: 1.5rem;
  padding-bottom: 0.375rem;
  padding-left: 0.75rem;
  padding-right: 0.75rem;
  padding-top: 0.375rem;

  &:focus {
    box-shadow: inset 0 0 0 1px rgb(var(--primary-color));
  }
}

.required {
  color: rgb(239 68 68);
  font-weight: 600;
}

.nested-fields {
  input, select, .ts-wrapper {
    margin-bottom: 1rem;
  }
  img {
    max-width: 25%;
  }
}

/* TomSelect */

.ts-wrapper {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background-color: var(--background-color);
  border-radius: 0.375rem;
  box-shadow: inset 0 0 0 1px rgb(156 163 175);
  line-height: 1.5rem;
  padding: .1875rem;

  .ts-control, &.full .ts-control {
    background-color: var(--background-color);
    border: none;

    input {
      color: var(--text-color);
    }

    .item {
      background-color: var(--background-color) !important;
      color: var(--text-color);
    }
  }

  &.single.input-active .ts-control {
    background-color: var(--background-color) !important;
  }

  .ts-dropdown, .ts-dropdown-content {
    background-color: var(--background-color);
    color: var(--text-color);

    .active {
      background-color: var(--primary-color);
      color: var(--text-color);
    }
  }
}

/* Flatpickr */

.flatpickr-input {
  width: 100%;
}

.flatpickr-calendar {
  background-color: var(--background-color);
  color: var(--text-color);

  .flatpickr-months, .flatpickr-weekday {
    color: var(--text-color);
    select, input {
      color: var(--text-color);
    }
    .flatpickr-prev-month, .flatpickr-next-month {
      color: var(--text-color);
      fill: var(--text-color);
    }
  }

  .flatpickr-current-month .flatpickr-monthDropdown-months .flatpickr-monthDropdown-month {
    background-color: var(--background-color);
  }

  .flatpickr-day {
    color: var(--text-color);

    &:hover {
      background-color: var(--primary-color);
      color: var(--background-color);
    }

    &.selected {
      background-color: var(--primary-color);
      color: var(--background-color);
    }

    &.today {
      border-color: var(--primary-color);
      color: var(--primary-color);
    }

    &.disabled {
      color: var(--light-text-color);
      cursor: not-allowed;

      &:hover {
        background-color: transparent;
      }
    }

    &.prevMonthDay,
    &.nextMonthDay {
      color: color-mix(in srgb, var(--text-color) 25%, black);

      &:hover {
        background-color: var(--primary-color);
        color: var(--background-color);
      }
    }
  }

  .flatpickr-time {
    border-top: 1px solid var(--border-color);

    input {
      background-color: var(--background-color);
      color: var(--text-color);
    }
  }
}

/* Trix */

.trix-button {
  background-color: color-mix(in srgb, var(--primary-color) 50%, var(--background-color)) !important;

  &:hover, &.trix-active {
    background-color: var(--primary-color) !important;
  }
}