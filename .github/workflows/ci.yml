name: Tests

on:
  pull_request:
    branches:
      - '*'
  push:
    branches:
      - main
  workflow_call:

jobs:
  lint:
    timeout-minutes: 10
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
          ruby-version: "3.4"

      - name: StandardRb check
        run: bundle exec standardrb

  sqlite:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby: ['3.2', '3.3', '3.4']
        gemfile:
          - sprockets
          - rails_7
          - rails_7_1
          - rails_7_2
          - rails_8_0
          - rails_main
        exclude:
          # sqlite3 ~> 1.7 is not compatible with Ruby 3.4+
          - gemfile: rails_7
            ruby: '3.4'
          - gemfile: rails_7_1
            ruby: '3.4'
          - gemfile: rails_7_2
            ruby: '3.4'

    env:
      BUNDLE_GEMFILE: ${{ github.workspace }}/gemfiles/${{ matrix.gemfile }}.gemfile
      BUNDLE_PATH_RELATIVE_TO_CWD: true

    steps:
      - uses: actions/checkout@master

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler: default
          bundler-cache: true

      - name: Run tests
        env:
          DATABASE_URL: "sqlite3:noticed_test"
          RAILS_ENV: test
        run: |
          bundle exec rails db:test:prepare
          bundle exec rails test

  mysql:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby: ['3.2', '3.3', '3.4']
        gemfile:
          - sprockets
          - rails_7
          - rails_7_1
          - rails_7_2
          - rails_8_0
          - rails_main
        exclude:
          # sqlite3 ~> 1.7 is not compatible with Ruby 3.4+
          - gemfile: rails_7
            ruby: '3.4'
          - gemfile: rails_7_1
            ruby: '3.4'
          - gemfile: rails_7_2
            ruby: '3.4'

    env:
      BUNDLE_GEMFILE: ${{ github.workspace }}/gemfiles/${{ matrix.gemfile }}.gemfile
      BUNDLE_PATH_RELATIVE_TO_CWD: true

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: test
        ports: ['3306:3306']
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@master

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler: default
          bundler-cache: true

      - name: Run tests
        env:
          DATABASE_URL: mysql2://root:password@127.0.0.1:3306/test
          RAILS_ENV: test
        run: |
          bundle exec rails db:test:prepare
          bundle exec rails test

  postgres:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby: ['3.2', '3.3', '3.4']
        gemfile:
          - sprockets
          - rails_7
          - rails_7_1
          - rails_7_2
          - rails_8_0
          - rails_main
        exclude:
          # sqlite3 ~> 1.7 is not compatible with Ruby 3.4+
          - gemfile: rails_7
            ruby: '3.4'
          - gemfile: rails_7_1
            ruby: '3.4'
          - gemfile: rails_7_2
            ruby: '3.4'

    env:
      BUNDLE_GEMFILE: ${{ github.workspace }}/gemfiles/${{ matrix.gemfile }}.gemfile
      BUNDLE_PATH_RELATIVE_TO_CWD: true

    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: test
        ports: ['5432:5432']

    steps:
      - uses: actions/checkout@master

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler: default
          bundler-cache: true

      - name: Run tests
        env:
          DATABASE_URL: postgres://postgres:password@localhost:5432/test
          RAILS_ENV: test
        run: |
          bundle exec rails db:test:prepare
          bundle exec rails test
